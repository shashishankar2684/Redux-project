{"ast":null,"code":"// import { createStore } from 'redux';\nimport { createSlice, configureStore } from '@reduxjs/toolkit';\nconst initialCounterState = {\n  counter: 0,\n  showCounter: true\n};\nconst counterSlice = createSlice({\n  name: 'counter',\n  initialState: nitialCounterState,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n    decrement(state) {\n      state.counter--;\n    },\n    increase(state, action) {\n      state.counter = state.counter + action.payload;\n    },\n    toggle(state) {\n      state.showCounter = !state.showCounter;\n    }\n  }\n});\nconst initialAuthState = {\n  isAuthenticated: false\n};\nconst authSlice = createSlice({\n  name: 'authentication',\n  initialState: initialAuthState,\n  reducers: {\n    login(state) {\n      state.isAuthenticated = true;\n    },\n    logout(state) {\n      state.isAuthenticated = false;\n    }\n  }\n});\nconst store = configureStore({\n  reducer: {\n    counter: counterSlice.reducer,\n    auth: authSlice.reducer\n  }\n});\nexport const counterActions = counterSlice.actions;\nexport const authActions = authSlice.actions;\nexport default store;\n\n// const counterReducer = (state = initialState  , action) => {\n//     if (action.type=== 'increment'){\n//         return {\n//             counter: state.counter + 1,\n//             showCounter: state.showCounter\n//         };\n//     }\n\n//     if (action.type === 'decrement') {\n//         return {\n//             counter: state.counter - 1,\n//             showCounter: state.showCounter\n//         };\n//     }\n//     if (action.type === 'increase') {\n//         return {\n//             counter: state.counter + action.amount,\n//             showCounter: state.showCounter\n//         };\n//     }\n\n//     if (action.type === 'toggle') {\n//         return {\n//             counter:state.counter,\n//             showCounter: !state.showCounter\n//         };\n//     }\n\n//     return state;\n// };","map":{"version":3,"names":["createSlice","configureStore","initialCounterState","counter","showCounter","counterSlice","name","initialState","nitialCounterState","reducers","increment","state","decrement","increase","action","payload","toggle","initialAuthState","isAuthenticated","authSlice","login","logout","store","reducer","auth","counterActions","actions","authActions"],"sources":["C:/Users/mshshs/Desktop/REACT/01-starting-project/src/store/index.js"],"sourcesContent":["// import { createStore } from 'redux';\r\nimport { createSlice , configureStore } from '@reduxjs/toolkit'\r\n\r\nconst initialCounterState = {counter: 0, showCounter: true} ;\r\n\r\nconst counterSlice = createSlice({\r\n    name:'counter',\r\n    initialState: nitialCounterState,\r\n    reducers:{\r\n        increment(state) {\r\n            state.counter++;\r\n        },\r\n\r\n        decrement(state) {\r\n            state.counter--;\r\n        },\r\n\r\n        increase(state, action) {\r\n            state.counter = state.counter + action.payload;\r\n        },\r\n\r\n        toggle(state) {\r\n            state.showCounter = !state.showCounter;\r\n        },\r\n    }\r\n});\r\n\r\nconst initialAuthState = {\r\n    isAuthenticated: false\r\n};\r\n\r\nconst authSlice = createSlice({\r\n    name :'authentication', \r\n    initialState: initialAuthState,\r\n    reducers:{\r\n        login(state){\r\n            state.isAuthenticated = true;\r\n        },\r\n        logout(state){\r\n            state.isAuthenticated = false;\r\n        }\r\n    }\r\n})\r\n\r\n\r\nconst store = configureStore({\r\n    reducer: { counter: counterSlice.reducer, auth: authSlice.reducer },\r\n}) ;\r\n\r\nexport const counterActions = counterSlice.actions;\r\nexport const authActions = authSlice.actions;\r\n\r\nexport default store;\r\n\r\n\r\n\r\n\r\n// const counterReducer = (state = initialState  , action) => {\r\n//     if (action.type=== 'increment'){\r\n//         return {\r\n//             counter: state.counter + 1,\r\n//             showCounter: state.showCounter\r\n//         };\r\n//     }\r\n\r\n//     if (action.type === 'decrement') {\r\n//         return {\r\n//             counter: state.counter - 1,\r\n//             showCounter: state.showCounter\r\n//         };\r\n//     }\r\n//     if (action.type === 'increase') {\r\n//         return {\r\n//             counter: state.counter + action.amount,\r\n//             showCounter: state.showCounter\r\n//         };\r\n//     }\r\n\r\n//     if (action.type === 'toggle') {\r\n//         return {\r\n//             counter:state.counter,\r\n//             showCounter: !state.showCounter\r\n//         };\r\n//     }\r\n \r\n//     return state;\r\n// };\r\n\r\n\r\n\r\n"],"mappings":"AAAA;AACA,SAASA,WAAW,EAAGC,cAAc,QAAQ,kBAAkB;AAE/D,MAAMC,mBAAmB,GAAG;EAACC,OAAO,EAAE,CAAC;EAAEC,WAAW,EAAE;AAAI,CAAC;AAE3D,MAAMC,YAAY,GAAGL,WAAW,CAAC;EAC7BM,IAAI,EAAC,SAAS;EACdC,YAAY,EAAEC,kBAAkB;EAChCC,QAAQ,EAAC;IACLC,SAASA,CAACC,KAAK,EAAE;MACbA,KAAK,CAACR,OAAO,EAAE;IACnB,CAAC;IAEDS,SAASA,CAACD,KAAK,EAAE;MACbA,KAAK,CAACR,OAAO,EAAE;IACnB,CAAC;IAEDU,QAAQA,CAACF,KAAK,EAAEG,MAAM,EAAE;MACpBH,KAAK,CAACR,OAAO,GAAGQ,KAAK,CAACR,OAAO,GAAGW,MAAM,CAACC,OAAO;IAClD,CAAC;IAEDC,MAAMA,CAACL,KAAK,EAAE;MACVA,KAAK,CAACP,WAAW,GAAG,CAACO,KAAK,CAACP,WAAW;IAC1C;EACJ;AACJ,CAAC,CAAC;AAEF,MAAMa,gBAAgB,GAAG;EACrBC,eAAe,EAAE;AACrB,CAAC;AAED,MAAMC,SAAS,GAAGnB,WAAW,CAAC;EAC1BM,IAAI,EAAE,gBAAgB;EACtBC,YAAY,EAAEU,gBAAgB;EAC9BR,QAAQ,EAAC;IACLW,KAAKA,CAACT,KAAK,EAAC;MACRA,KAAK,CAACO,eAAe,GAAG,IAAI;IAChC,CAAC;IACDG,MAAMA,CAACV,KAAK,EAAC;MACTA,KAAK,CAACO,eAAe,GAAG,KAAK;IACjC;EACJ;AACJ,CAAC,CAAC;AAGF,MAAMI,KAAK,GAAGrB,cAAc,CAAC;EACzBsB,OAAO,EAAE;IAAEpB,OAAO,EAAEE,YAAY,CAACkB,OAAO;IAAEC,IAAI,EAAEL,SAAS,CAACI;EAAQ;AACtE,CAAC,CAAC;AAEF,OAAO,MAAME,cAAc,GAAGpB,YAAY,CAACqB,OAAO;AAClD,OAAO,MAAMC,WAAW,GAAGR,SAAS,CAACO,OAAO;AAE5C,eAAeJ,KAAK;;AAKpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}